/* -------------------------------------------------------------------
 * Cifrado.java
 * versión 2.0
 * Copyright (C) 2016  José Ricardo Rodríguez Abreu, Jimenez Mendez R..
 * Facultad de Ciencias,
 * Universidad Nacional Autónoma de México, Mexico.
 * Este programa es software libre; se puede redistribuir
 * y/o modificar en los términos establecidos por la
 * Licencia Pública General de GNU tal como fue publicada
 * por la Free Software Foundation en la versión 2 o
 * superior.                  
 *                            
 * Este programa es distribuido con la esperanza de que
 * resulte de utilidad, pero SIN GARANTÍA ALGUNA; de hecho
 * sin la garantía implícita de COMERCIALIZACIÓN o
 * ADECUACIÓN PARA PROPÓSITOS PARTICULARES. Véase la
 * Licencia Pública General de GNU para mayores detalles.
 *
 * Con este programa se debe haber recibido una copia de la
 * Licencia Pública General de GNU, de no ser así, visite el
 * siguiente URL:             
 * http://www.gnu.org/licenses/gpl.html
 * o escriba a la Free Software Foundation Inc.,
 * 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 * -------------------------------------------------------------------
 */

package Cifrados;

public class Cesar{
    
    private static final int a = 0x41;
    private static final int z = 0x5a;
    private static int s;
    private static int lugares = 0;

    public static char[] creaTabla(){
	char[] tablaCifrado = new char[26];
	for(int i = 0; i < 26; i++){
	    int k = (i % 26) + 65;
	    tablaCifrado[i] = (char)k;
	}
	return tablaCifrado;
    }

    public static void cifra(String clave, String entrada) throws IOException{
	String linea = null;
	BufferedReader texto = null;
	char[] tabla = creaTabla();
	try{
	    lugares = Integer.parseInt(clave);
	    texto = new BufferedReader(new FileReader(entrada));
	    while((linea = texto.readLine()) != null){
		for(int i = 0; i < linea.length(); i++){
		    char fila = linea.toUpperCase().charAt(u);
		    if(a > (s = (int)fila) || (s > z)){
			System.out.print((char)s);
		    }else {
			System.out.print(tabla[(s+lugares)%26]);
			
		    }
		}
	    }
	    System.out.println("");
	}catch(FileNotFoundException e){
	    System.err.println("El archivo de entrada no existe.");
	}catch(NumberFormatException n){
	    System.err.println("Se debe pasar un numero.");
	}
    } 


    public static void descifra(String clave, String entrada) throws IOException{
	String linea = null;
	BufferedReader texto = null;
	char[] tabla = creaTabla();
	try{
	    lugares = Integer.parseInt(clave);
	    texto = new BufferedReader(new FileReader(entrada));
	    while((linea = texto.readLine()) != null){
		for(int i = 0; i < linea.length(); i++){
		    char fila = linea.toUpperCase().charAt(u);
		    if(a > (s = (int)fila) || (s > z)){
			System.out.print((char)s);
		    }else {
			System.out.print(tabla[(s-lugares)%26]);
		    }
		}
	    }
	    System.out.println("");
	}catch(FileNotFoundException e){
	    System.err.println("El archivo de entrada no existe.");
	}catch(NumberFormatException n){
	    System.err.println("Se debe pasar un numero.");
	}
    }
    

}
